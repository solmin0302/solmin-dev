name: CD

on:
  push:
    branches-ignore:
      - '**'
    tags:
      - 'release-prod-*'
      - 'release-canary'

env:
  GITHUB_API_URL_BASE: https://api.github.com/repos/${{ github.repository }}
  # Node.js
  NODE_VERSION: '20.x'
  NPM_REGISTRY_URL: 'https://registry.npmjs.org'
  HUSKY: 0

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest

    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - name: Wait for CI
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: wait-for-ci
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build
          ref: ${{ github.event.head }}

      - name: Shutdown workflow
        if: steps.wait-for-ci.outputs.conclusion != 'success'
        run: node -e 'process.exit(1)'

  release:
    needs: wait-for-ci
    if: github.event.ref != 'refs/tags/release-canary'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}
          cache: 'pnpm'

      - run: pnpm install

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_WRITE_NPM_TOKEN }}
        run: pnpm exec lerna publish --no-private

  canary-release:
    needs: wait-for-ci
    if: github.event.ref == 'refs/tags/release-canary'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}
          cache: 'pnpm'

      - run: pnpm install

      - name: Publish as canary
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READ_WRITE_NPM_TOKEN }}
        run: pnpm exec lerna publish --canary --force-publish --preid=canary --yes --no-private
